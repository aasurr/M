#include <p18f4550.h> 
#include <stdlib.h> 
 void timer_isr(void); 
 
extern void_startup (void); 
#pragma code_RESET_INTERRUPT_VECTOR = 0x1000 
void_reset (void) 
{ 
    _asm goto_startup_endasm 
 
} 
#pragma code 
#pragma code_HIGH_INTERRUPT_VECTOR = 0x1008 
void high_ISR (void) 
{ 
     
    _asm goto timer_isr_endasm   
timer_iser 
 
} 
// 
#pragma code 
// 
#pragma code_LOW_INTERRUPT_VECTOR = 0x1018 
 void low_ISR (void) 
{ 
 
} 
#pragma code 
#pragma interrupt timer_isr 
void timer_isr(void) 
{ 
    TMR0H = 0XFF;                        
    TMR0L = 0X00; 
    PORTB = ~PORTB;                          
    INTCONbits.TMR0IF = 0;               
 
} 
 
 
 
 
void main() 
{    
    ADCON1 = 0x0F;         
     
    TRISB = 0;                   
    PORTB = 0xFF;               
    T0CON = 0x00;                
    TMR0H = 0xFF;                 
    TMR0L = 0x00; 
    INTCONbits.TMR0IF = 0;     
    INTCONbits.TMR0IE = 1;       
    T0CONbits.TMR0ON = 1;        
    INTCONbits.GIE = 1;          
 
    while(1);                     
     
} 
 
 
